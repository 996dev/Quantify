from datetime import timedelta, datetime
import pytz
from airflow.operators.bash_operator import BashOperator
from airflow.operators.dummy_operator import DummyOperator
from airflow.models import DAG

default_args = {
    'owner': 'cord',
    # 'depends_on_past': False,
    'depends_on_past': True,
    # 'start_date': airflow.utils.dates.days_ago(2),
    'wait_for_downstream': True,
    'execution_timeout': timedelta(minutes=3),
    'email': ['123456@qq.com'],
    'email_on_failure': False,
    'email_on_retry': False,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
}

tz = pytz.timezone('Asia/Shanghai')
dt = datetime(2018, 7, 19, 18, 20, tzinfo=tz)
utc_dt = dt.astimezone(pytz.utc).replace(tzinfo=None)
dag = DAG(
    '{{ dag_name }}',
    default_args=default_args,
    description='my DAG',
    schedule_interval='*/1 * * * *',
    start_date=utc_dt
)
root = DummyOperator(task_id='root', dag=dag)
for i in range(50):
    i = str(i)
    task = BashOperator(
        task_id='task'+i,
        bash_command= 'echo `date`',
        dag=dag)
    task.set_downstream(root)
